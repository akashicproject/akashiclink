{"version":3,"file":"static/js/995.7ca78f20.chunk.js","mappings":"uMAIM,MAAOA,UAAmBC,EAAAA,GAG9BC,cACEC,QACAC,KAAKC,YAAc,IACrB,CAEAC,WAAWC,GACTH,KAAKC,YAAcG,OAAOC,KAAKF,EAAQG,IAAKH,EAAQI,YAAc,SACpE,CAEAL,cACE,OAAO,IAAIM,SAAQ,CAACC,EAASC,KACH,MAApBV,KAAKC,aACPD,KAAKC,YAAYU,QACjBX,KAAKC,YAAc,KACnBQ,KAEAC,EAAO,6B,GAGb,EAGF,MAAME,EAAU,IAAIhB,C","sources":["../../../node_modules/@capacitor/browser/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { BrowserPlugin, OpenOptions } from './definitions';\n\nexport class BrowserWeb extends WebPlugin implements BrowserPlugin {\n  _lastWindow: Window | null;\n\n  constructor() {\n    super();\n    this._lastWindow = null;\n  }\n\n  async open(options: OpenOptions): Promise<void> {\n    this._lastWindow = window.open(options.url, options.windowName || '_blank');\n  }\n\n  async close(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this._lastWindow != null) {\n        this._lastWindow.close();\n        this._lastWindow = null;\n        resolve();\n      } else {\n        reject('No active window to close!');\n      }\n    });\n  }\n}\n\nconst Browser = new BrowserWeb();\n\nexport { Browser };\n"],"names":["BrowserWeb","WebPlugin","constructor","super","this","_lastWindow","async","options","window","open","url","windowName","Promise","resolve","reject","close","Browser"],"sourceRoot":""}