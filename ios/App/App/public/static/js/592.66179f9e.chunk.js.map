{"version":3,"file":"static/js/592.66179f9e.chunk.js","mappings":"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","sources":["../../../node_modules/@aparajita/capacitor-secure-storage/dist/esm/base.js","../../../node_modules/@aparajita/capacitor-secure-storage/dist/esm/web.js"],"sourcesContent":["import { Capacitor, CapacitorException, WebPlugin } from '@capacitor/core';\nimport { StorageError, StorageErrorType } from './definitions';\nfunction isStorageErrorType(value) {\n    return value !== undefined && Object.keys(StorageErrorType).includes(value);\n}\n// eslint-disable-next-line import/prefer-default-export\nexport class SecureStorageBase extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.prefix = 'capacitor-storage_';\n        this.sync = false;\n    }\n    async setSynchronize(sync) {\n        this.sync = sync;\n        if (Capacitor.getPlatform() === 'ios') {\n            return this.setSynchronizeKeychain({ sync });\n        }\n        // no-op on other platforms\n        return Promise.resolve();\n    }\n    async getSynchronize() {\n        return Promise.resolve(this.sync);\n    }\n    // Native calls which reject will throw a CapacitorException with a code.\n    // We want to convert these to StorageErrors.\n    async tryOperation(operation) {\n        try {\n            return await operation();\n        }\n        catch (e) {\n            if (e instanceof CapacitorException && isStorageErrorType(e.code)) {\n                console.log('converting CapacitorException to StorageError');\n                throw new StorageError(e.message, e.code);\n            }\n            throw e;\n        }\n    }\n    async get(key, convertDate = true, sync) {\n        if (key) {\n            const { data } = await this.tryOperation(async () => this.internalGetItem({\n                prefixedKey: this.prefixedKey(key),\n                sync: sync !== null && sync !== void 0 ? sync : this.sync,\n            }));\n            if (data === null) {\n                return null;\n            }\n            if (convertDate) {\n                const date = parseISODate(data);\n                if (date) {\n                    return date;\n                }\n            }\n            try {\n                // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n                return JSON.parse(data);\n            }\n            catch (e) {\n                throw new StorageError('Invalid data', StorageErrorType.invalidData);\n            }\n        }\n        return SecureStorageBase.missingKey();\n    }\n    async getItem(key) {\n        if (key) {\n            const { data } = await this.tryOperation(async () => this.internalGetItem({\n                prefixedKey: this.prefixedKey(key),\n                sync: this.sync,\n            }));\n            return data;\n        }\n        return null;\n    }\n    async set(key, data, convertDate = true, sync) {\n        if (key) {\n            let convertedData = data;\n            if (convertDate && data instanceof Date) {\n                convertedData = data.toISOString();\n            }\n            return this.tryOperation(async () => this.internalSetItem({\n                prefixedKey: this.prefixedKey(key),\n                data: JSON.stringify(convertedData),\n                sync: sync !== null && sync !== void 0 ? sync : this.sync,\n            }));\n        }\n        return SecureStorageBase.missingKey();\n    }\n    async setItem(key, value) {\n        if (key) {\n            return this.tryOperation(async () => this.internalSetItem({\n                prefixedKey: this.prefixedKey(key),\n                data: value,\n                sync: this.sync,\n            }));\n        }\n        return SecureStorageBase.missingKey();\n    }\n    async remove(key, sync) {\n        if (key) {\n            const { success } = await this.tryOperation(async () => this.internalRemoveItem({\n                prefixedKey: this.prefixedKey(key),\n                sync: sync !== null && sync !== void 0 ? sync : this.sync,\n            }));\n            return success;\n        }\n        return SecureStorageBase.missingKey();\n    }\n    async removeItem(key) {\n        if (key) {\n            await this.tryOperation(async () => this.internalRemoveItem({\n                prefixedKey: this.prefixedKey(key),\n                sync: this.sync,\n            }));\n            return;\n        }\n        SecureStorageBase.missingKey();\n    }\n    async keys(sync) {\n        const { keys } = await this.tryOperation(async () => this.getPrefixedKeys({\n            prefix: this.prefix,\n            sync: sync !== null && sync !== void 0 ? sync : this.sync,\n        }));\n        const prefixLength = this.prefix.length;\n        return keys.map((key) => key.slice(prefixLength));\n    }\n    async getKeyPrefix() {\n        return Promise.resolve(this.prefix);\n    }\n    async setKeyPrefix(prefix) {\n        this.prefix = prefix;\n        return Promise.resolve();\n    }\n    prefixedKey(key) {\n        return this.prefix + key;\n    }\n    static missingKey() {\n        throw new StorageError('No key provided', StorageErrorType.missingKey);\n    }\n}\n// RegExp to match an ISO 8601 date string in the form YYYY-MM-DDTHH:mm:ss.sssZ\nconst isoDateRE = /^\"(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z\"$/u;\nfunction parseISODate(isoDate) {\n    const match = isoDateRE.exec(isoDate);\n    if (match) {\n        /* eslint-disable @typescript-eslint/no-magic-numbers */\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1; // month is zero-based\n        const day = parseInt(match[3], 10);\n        const hour = parseInt(match[4], 10);\n        const minute = parseInt(match[5], 10);\n        const second = parseInt(match[6], 10);\n        const millis = parseInt(match[7], 10);\n        const epochTime = Date.UTC(year, month, day, hour, minute, second, millis);\n        return new Date(epochTime);\n        /* eslint-enable */\n    }\n    return null;\n}\n","import { SecureStorageBase } from './base';\n// eslint-disable-next-line import/prefer-default-export\nexport class SecureStorageWeb extends SecureStorageBase {\n    // @native\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setSynchronizeKeychain(options) {\n        return Promise.resolve();\n    }\n    // @native\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async internalGetItem(options) {\n        return { data: localStorage.getItem(options.prefixedKey) };\n    }\n    // @native\n    async internalSetItem(options) {\n        localStorage.setItem(options.prefixedKey, options.data);\n        return Promise.resolve();\n    }\n    // @native\n    async internalRemoveItem(options) {\n        const item = localStorage.getItem(options.prefixedKey);\n        if (item !== null) {\n            localStorage.removeItem(options.prefixedKey);\n            return Promise.resolve({ success: true });\n        }\n        return Promise.resolve({ success: false });\n    }\n    async clear() {\n        const { keys } = await this.getPrefixedKeys({ prefix: this.prefix });\n        keys.forEach((key) => {\n            localStorage.removeItem(key);\n        });\n        return Promise.resolve();\n    }\n    // @native\n    // eslint-disable-next-line @typescript-eslint/require-await,@typescript-eslint/no-unused-vars\n    async clearItemsWithPrefix(options) {\n        this.unimplemented('clearItemsWithPrefix is native only');\n    }\n    // @native\n    async getPrefixedKeys(options) {\n        const keys = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            if (key === null || key === void 0 ? void 0 : key.startsWith(options.prefix)) {\n                keys.push(key);\n            }\n        }\n        return Promise.resolve({ keys });\n    }\n}\n"],"names":["SecureStorageBase","WebPlugin","constructor","super","arguments","this","prefix","sync","async","Capacitor","setSynchronizeKeychain","Promise","resolve","operation","e","CapacitorException","undefined","value","code","Object","keys","StorageErrorType","includes","console","log","StorageError","message","key","convertDate","length","data","tryOperation","internalGetItem","prefixedKey","date","isoDate","match","isoDateRE","exec","year","parseInt","month","day","hour","minute","second","millis","epochTime","Date","UTC","parseISODate","JSON","parse","missingKey","convertedData","toISOString","internalSetItem","stringify","success","internalRemoveItem","getPrefixedKeys","prefixLength","map","slice","static","SecureStorageWeb","options","localStorage","getItem","setItem","removeItem","forEach","unimplemented","i","startsWith","push"],"sourceRoot":""}