{"version":3,"file":"static/js/212.2a600fe3.chunk.js","mappings":"wLAIM,MAAOA,UAAeC,EAAAA,GAC1BC,cACEC,QA4BM,KAAAC,uBAAyB,KAC/B,MAAMC,EAAO,CACXC,UAA8B,IAApBC,SAASC,QAGrBC,KAAKC,gBAAgB,iBAAkBL,GACnCE,SAASC,OACXC,KAAKC,gBAAgB,QAAS,MAE9BD,KAAKC,gBAAgB,SAAU,K,EApCjCH,SAASI,iBACP,mBACAF,KAAKL,wBACL,EAEJ,CAEAQ,UACE,MAAMH,KAAKI,cAAc,0BAC3B,CAEAC,gBACE,MAAML,KAAKI,cAAc,0BAC3B,CAEAC,qBACE,MAAO,CAAEC,IAAK,GAChB,CAEAD,iBACE,MAAO,CAAER,UAA8B,IAApBC,SAASC,OAC9B,CAEAM,oBACE,MAAML,KAAKI,cAAc,0BAC3B,E","sources":["../../../node_modules/@capacitor/app/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AppInfo, AppPlugin, AppLaunchUrl, AppState } from './definitions';\n\nexport class AppWeb extends WebPlugin implements AppPlugin {\n  constructor() {\n    super();\n    document.addEventListener(\n      'visibilitychange',\n      this.handleVisibilityChange,\n      false,\n    );\n  }\n\n  exitApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getInfo(): Promise<AppInfo> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getLaunchUrl(): Promise<AppLaunchUrl> {\n    return { url: '' };\n  }\n\n  async getState(): Promise<AppState> {\n    return { isActive: document.hidden !== true };\n  }\n\n  async minimizeApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  private handleVisibilityChange = () => {\n    const data = {\n      isActive: document.hidden !== true,\n    };\n\n    this.notifyListeners('appStateChange', data);\n    if (document.hidden) {\n      this.notifyListeners('pause', null);\n    } else {\n      this.notifyListeners('resume', null);\n    }\n  };\n}\n"],"names":["AppWeb","WebPlugin","constructor","super","handleVisibilityChange","data","isActive","document","hidden","this","notifyListeners","addEventListener","exitApp","unimplemented","async","url"],"sourceRoot":""}